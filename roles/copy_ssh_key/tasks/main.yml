---
- name: check if root key exists
  stat:
    path: /root/.ssh/id_rsa
  register: root_rsa_key_file

- name: Generate ssh_key
  command: ssh-keygen -N '' -f /root/.ssh/id_rsa
  when: not (root_rsa_key_file.stat.exists)
  changed_when: true
  tags: skip_ansible_lint

- name: fetch root public ssh keys
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_key
  when: inventory_hostname == groups['master'][0]
  tags: skip_ansible_lint

- name: Set local facts
  set_fact:
    ssh_key_out: "{{ ssh_key.stdout }}"
  when: inventory_hostname == groups['master'][0]

- name: Add nodes to know_hosts
  shell: ssh-keyscan -H "{{ inventory_hostname }}" >> ~/.ssh/known_hosts
  delegate_to: "{{ groups['master'][0] }}"
  when: inventory_hostname in groups['nodes']
  tags: skip_ansible_lint

- name: deploy key on all servers
  authorized_key:
    user: root
    key: "{{ hostvars[groups['master'][0]].ssh_key_out }}"
  when: inventory_hostname in groups['nodes']
